{"version":3,"file":"navbar-dropdown.js","sourceRoot":"","sources":["../src/navbar-dropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { CSSTransition } from 'react-transition-group';\n\ninterface NavbarDropdownContextProps {\n  open: boolean;\n  handleClickToggle: () => void;\n  handleClickItem: () => void;\n}\n\nconst NavbarDropdownContext = React.createContext<Partial<NavbarDropdownContextProps>>({});\n\nconst StyledNavbarDropdown = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\ninterface NavbarDropdownState {\n  open: boolean;\n}\n\nexport class NavbarDropdown extends React.Component<React.HTMLAttributes<HTMLDivElement>, NavbarDropdownState> {\n  private ref = React.createRef<HTMLDivElement>();\n\n  constructor(props: React.HTMLAttributes<HTMLDivElement>) {\n    super(props);\n    this.state = { open: false };\n    this.handleClickToggle = this.handleClickToggle.bind(this);\n    this.handleClickItem = this.handleClickItem.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  handleClickToggle() {\n    this.setState({ open: !this.state.open });\n  }\n\n  handleClickItem() {\n    this.setState({ open: false });\n  }\n\n  handleClickOutside(e: MouseEvent) {\n    if (this.state.open) {\n      if (this.ref.current && !this.ref.current.contains(e.target as Node)) {\n        this.setState({ open: false });\n        e.stopPropagation();\n      }\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside, true);\n  }\n\n  render() {\n    const contextValue = {\n      open: this.state.open,\n      handleClickToggle: this.handleClickToggle,\n      handleClickItem: this.handleClickItem,\n    };\n    return (\n      <NavbarDropdownContext.Provider value={contextValue}>\n        <StyledNavbarDropdown ref={this.ref} {...this.props}>\n          {this.props.children}\n        </StyledNavbarDropdown>\n      </NavbarDropdownContext.Provider>\n    );\n  }\n}\n\nexport const NavbarDropdownToggle: React.FC<React.HTMLAttributes<HTMLSpanElement>> = (props) => {\n  const contextValue = React.useContext(NavbarDropdownContext);\n  const { onClick, ...other } = props;\n  return (\n    <span\n      onClick={(e) => {\n        if (onClick) onClick(e);\n        contextValue.handleClickToggle!();\n      }}\n      {...other}\n    >\n      {props.children}\n    </span>\n  );\n};\n\nexport const NavbarDropdownOpen: React.FC = (props) => {\n  const contextValue = React.useContext(NavbarDropdownContext);\n  return <>{!contextValue.open! && props.children}</>;\n};\n\nexport const NavbarDropdownClose: React.FC = (props) => {\n  const contextValue = React.useContext(NavbarDropdownContext);\n  return <>{contextValue.open! && props.children}</>;\n};\n\nconst StyledNavbarDropdownMenu = styled.div`\n  position: absolute;\n  width: max-content;\n`;\n\nexport const NavbarDropdownMenu: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n  const contextValue = React.useContext(NavbarDropdownContext);\n  return <>{contextValue.open! && <StyledNavbarDropdownMenu {...props}>{props.children}</StyledNavbarDropdownMenu>}</>;\n};\n\ntype CSSTransitionProps = React.ComponentProps<typeof CSSTransition>;\nexport type NavbarDropdownCSSTransitionMenuProps = React.HTMLAttributes<HTMLDivElement> & CSSTransitionProps;\n\nexport const NavbarDropdownCSSTransitionMenu: React.FC<NavbarDropdownCSSTransitionMenuProps> = (props) => {\n  const contextValue = React.useContext(NavbarDropdownContext);\n  return (\n    <CSSTransition in={contextValue.open!} unmountOnExit {...props}>\n      <StyledNavbarDropdownMenu {...props}>{props.children}</StyledNavbarDropdownMenu>\n    </CSSTransition>\n  );\n};\n\nconst StyledNavbarDropdownItem = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const NavbarDropdownItem: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n  const contextValue = React.useContext(NavbarDropdownContext);\n  const { onClick, ...other } = props;\n  return (\n    <StyledNavbarDropdownItem\n      onClick={(e) => {\n        if (onClick) onClick(e);\n        contextValue.handleClickItem!();\n      }}\n      {...other}\n    >\n      {props.children}\n    </StyledNavbarDropdownItem>\n  );\n};\n"]}